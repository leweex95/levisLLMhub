name: Daily Regression Test

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  daily-regression-test:
    runs-on: windows-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      
      - name: Verify Node
        run: |
          node -v
          npm -v
        shell: pwsh
  
      - name: Install Poetry
        run: python -m pip install --upgrade poetry==2.2.0

      - name: Install dependencies
        run: |
          poetry install
        shell: pwsh

      - name: Validate levisllmhub installation
        run: |
          poetry run pip show levisllmhub
        shell: pwsh
  
      - name: Run regression test
        run: |
          poetry run python - <<'EOF'
          from datetime import datetime
          from levisllmhub.chatgpt.chatgpt import ask_chatgpt

          result = ask_chatgpt(
              "What is the date today? Do not respond anything else, just the date in YYYY-MM-DD format. No other words or characters needed, just these 9 characters altogether."
          )

          expected_date = datetime.now().strftime("%Y-%m-%d")

          if result != expected_date:
              raise ValueError(f"Regression test failed: expected {expected_date}, got ChatGPT output: {result}")
          else:
              print(f"Regression test passed: expected {expected_date}, ChatGPT output: {result}")
          EOF
        shell: bash

  notify:
      needs: daily-regression-test 
      if: failure()
      runs-on: ubuntu-latest
      steps:
        - name: Send failure email
          uses: dawidd6/action-send-mail@v3
          with:
            server_address: smtp.gmail.com
            server_port: 587
            username: ${{ secrets.EMAIL_USERNAME }}
            password: ${{ secrets.EMAIL_PASSWORD }}
            subject: "ðŸš¨ [TextGen Github Project] Daily Regression Test Failed"
            body: |
              **ðŸš¨ Daily Regression Test Failed!**
              
              > Check logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            to: ${{ secrets.EMAIL_USERNAME }}
            from: GitHub Actions <${{ secrets.EMAIL_USERNAME }}>
